ALTER PROCEDURE DBO.SANPP_RF_VALORIZACAO_LOTE_THIAGO
 (  
	 @RF_CARACTERISTICA VARCHAR(20),  
	 @DT_ICAL  DATETIME,  
	 @DT_FNAL  DATETIME,  
	 @PFPJ_CUSTODIANTE VARCHAR(15) = '',  
	 @PFPJ_APELIDO_EMPRESA VARCHAR(15) = '',  
	 @ATV_CODIGO  VARCHAR(15) = '',  
	 @IDX_CODIGO  VARCHAR(15) = '',  
	 @TIPO_ESTOQUE  VARCHAR(02) = '',  
	 @VLZ_LOTE  CHAR(01) = 'N',  -- UTILIZADO PARA CALCULAR EM LOTE  
	 @VLZ_NP   CHAR(01) = 'N',  -- SELECIONAR OU NAO AS NAO PADRONIZADAS (NAO LOTE)  
	 @GERAR_LOG_BATCH CHAR(01) = 'N',  -- UTILIZADO NA VALORIZACAO BATCH, PARA GERAR O LOG DE PROGRESSO E ERROS  
	 @DT_PROCESSO  DATETIME = NULL, -- UTILIZADO NA VALORIZACAO BATCH, PARA GERAR O LOG DE PROGRESSO E ERROS  
	 @TIPO_PROCESSO  VARCHAR(30) = '', -- IDENTIFICACAO DO PROCESSO, PARA SER IDENTIFICADO NO LOG  
	 @CONSIDERAR_RETROATIVAS CHAR(01) = 'N',  -- UTILIZADO PARA VALORIZACAO BATCH, PARA VALORIZAR OPERACOES COM MOVIMENTOS RETROATIVOS (D-1)  
	 @SPID   INT = @@SPID,   -- SPID DA CONEXAO PRINCIPAL, NECESSARIO EM PROCESSOS EM PARALELO, COMO O FECHAMENDO DA ASSET  
	 @RETORNA_MSG  CHAR(01) = 'N',   -- INDICA SE RETORNA MENSAGEM DE ERRO NA VARIÁVEL DE OUTPUT  
	 @MENSAGEM_ERRO  VARCHAR(500) = '' OUTPUT, -- MENSAGEM DE ERRO  
	 @PIT_CDBFC_ID_RELM     INT   = NULL,  
	 @PSD_CDBFC_DT_MVTO     SMALLDATETIME   = NULL,  
	 @USU_CODIGO  CHAR(5) = 'Q96',  
	 @ID_CONEXAO  INT = NULL,
	 @SELECT_OU_EXEC VARCHAR(1) = '',  
	 @BLOCO INT = 0,
	 @QTDPORBLOCO INT = 0
 )  
  
AS  
BEGIN -- RF2500.PRC  
  
	IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
	BEGIN  
		INSERT INTO HISTORICOS  
		SELECT   
		USU_DATA_HORA = GETDATE()  
		, USU_CODIGO    = @USU_CODIGO  
		, STRU_MODULO   = 'RFVSQL'  
		, SIS_CODIGO    = 'RFV'  
		, DESC_OPER     = 'VALORIZACAO LOTE (RF2500) - CONEXAO: ' + convert(char(50),isnull(@ID_CONEXAO,0))  
	END  
  
	DECLARE  
		@CARAC   CHAR(20),  
		@CH_DT_ICAL  CHAR(08),  
		@CH_DT_FNAL  CHAR(08),  
		@STR   VARCHAR(8000),  
		@WHERE   VARCHAR(8000),  
		@ERR_MSG  VARCHAR(200),  
		@QTD_REG  INT,  
		@QTD_PROC  INT,  
		@EH_FUNDO  CHAR(01),  
		@DT_ULT_COTA_LIBERADA DATETIME,  
		@DT_VAL_INICIO  DATETIME,  
		@RETORNO  INT,  
		@DT_RESERVA_ANTERIOR DATETIME,  
		@CH_RESERVA_ANTERIOR DATETIME,  
		@TEM_MOVTO_RETROATIVO CHAR(01),  
		@VDT_GETDATE_ERRO      DATETIME,  
		@VCH_RFR_CONTROLE    VARCHAR(15) = 'RDF.VALZ.N.PADR'
  
	IF NOT(@GERAR_LOG_BATCH = 'S' AND ISNULL(@DT_PROCESSO, '2099-12-31') <> '2099-12-31')  
	BEGIN     
		SET @SELECT_OU_EXEC = ''  
	END  
  
	-- TEMPORARIA COM O NUMERO DA CONEXAO PRINCIPAL, EVITANDO PASSAGEM DE PARAMETROS PARA TODAS AS OUTRAS PROCs  
	 CREATE TABLE #TMP_CONEXAO (SPID INT)  
	 INSERT INTO #TMP_CONEXAO (SPID) VALUES (@SPID)  

	--***********************************************************************************************************************
  	IF @SELECT_OU_EXEC = 'E'
	BEGIN 
   
		if @@spid = 109 select 'rf2500', 75

		--NAO PADRONIZADAS E TITULOS PUBLICOS  
		SELECT  
		   @CARAC = '',  
		   @QTD_PROC = 0  		  
		  	
		CREATE TABLE #TEMP_PROCESSAMENTO  
		(  
			linha int,
			RF_CARACTERISTICA CHAR(20),  
			EH_FUNDO  CHAR(01),  
			DT_ULTIMA_COTA_LIBERADA DATETIME,  
			TEM_MOVTO_RETROATIVO CHAR(01)  
		)  
		DELETE #TEMP_PROCESSAMENTO		  		
		INSERT INTO #TEMP_PROCESSAMENTO
			SELECT  *
			FROM    (
			SELECT  
				ROW_NUMBER() OVER (ORDER BY RF_CARACTERISTICA) AS linha,
				--RF_CARACTERISTICA,  
				--EH_FUNDO,  
				--DT_ULTIMA_COTA_LIBERADA,  
				--TEM_MOVTO_RETROATIVO
				--RFR_CONTROLE, 
				RF_CARACTERISTICA,
				RFR_STR_10, 
				RFR_DATA, 
				RFR_STR_11  
			FROM  
				RF_RELATORIOS  
			WHERE 
				RFR_CONTROLE = @VCH_RFR_CONTROLE
					) AS RowConstrainedResult
			WHERE linha >= (@BLOCO * @QTDPORBLOCO) + 1
			   AND linha <= (@BLOCO * @QTDPORBLOCO) + @QTDPORBLOCO
			ORDER BY linha

		--WHILE 1=1 ***********************************************************************************************************************
		-- EXEC SANPP_RF_VALORIZACAO
		-- EXEC SANPP_RF_VALZ_ESTQ_GERENCIAL
		WHILE 1=1  
		BEGIN  

			if @@spid = 109 select 'rf2500', 145
			if @@spid = 109 select @DT_ICAL DT_ICAL

			SELECT @MENSAGEM_ERRO = ''  
			SELECT @DT_VAL_INICIO = @DT_ICAL
		  
			SELECT TOP 1   
			@CARAC = RF_CARACTERISTICA,  
			@EH_FUNDO = EH_FUNDO,  
			@TEM_MOVTO_RETROATIVO = ISNULL(TEM_MOVTO_RETROATIVO,'N'),  
			@DT_ULT_COTA_LIBERADA = DT_ULTIMA_COTA_LIBERADA  
			FROM  #TEMP_PROCESSAMENTO  		   
		  
			IF @@ROWCOUNT = 0  
			BREAK  
		  
		      
		   -- TRATAMENTO PARA OPERACOES RETROATIVAS  
		   IF @CONSIDERAR_RETROATIVAS = 'S' AND @TEM_MOVTO_RETROATIVO = 'S'  
			SELECT @DT_VAL_INICIO = @DT_RESERVA_ANTERIOR  
		  
			-- VERIFICA A COTA DOS FUNDOS  
			IF @EH_FUNDO  = 'S' AND @DT_ULT_COTA_LIBERADA >= @DT_VAL_INICIO  
			SELECT @DT_VAL_INICIO = DATEADD(DAY, 1, @DT_ULT_COTA_LIBERADA)  

			if @@spid = 109 select 'rf2500', 178
			if @@spid = 109 select @DT_VAL_INICIO
			if @@spid = 109 select 'rf2500', 180
			if @@spid = 109 select @DT_FNAL

		   IF @DT_VAL_INICIO <= @DT_FNAL  
		   BEGIN  
		  
				-- RF0888.PRC  
				SELECT @MENSAGEM_ERRO = ''  

				if @@spid = 109 select 'rf2500', 187
				EXEC @RETORNO = SANPP_RF_VALORIZACAO @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

				if @@spid = 109 select 'rf2500', 187, 'SANPP_RF_VALORIZACAO', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
				if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
		  
				/***************************************************/  
				/* RDF - VALORIZACAO DE ESTOQUE GERENCIAL (RF1725) */  
				/***************************************************/  
					SELECT @MENSAGEM_ERRO = ''  

				if @@spid = 109 select 'rf2500', 198
				EXEC SANPP_RF_VALZ_ESTQ_GERENCIAL @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  
				
				if @@spid = 109 select 'rf2500', 198, 'SANPP_RF_VALZ_ESTQ_GERENCIAL', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
				if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
		   END  
		  
			IF @GERAR_LOG_BATCH = 'S' AND RTRIM(@MENSAGEM_ERRO) = ''   
			BEGIN  
				INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				VALUES (@DT_PROCESSO, 'CARAC', @SPID, GETDATE(), @CARAC)  
			END  
		  
		   -- INCREMENTA CONTADOR DE REGISTROS PROCESSADOS  
		   SELECT @QTD_PROC = @QTD_PROC + 1  
		  
		   -- A CADA 100 REGISTROS PROCESSADOS, VERIFICA SE O PROCESSO FOI CANCELADO OU NAO (SOMENTE NA VALORIZACAO BATCH)  
		   IF @QTD_PROC >= 100 AND @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
				-- ZERA CONTADOR  
				SELECT @QTD_PROC = 0  
		  
				IF EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
				BEGIN  
				 -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
				 RETURN  
				END  
		   END  
		   DELETE #TEMP_PROCESSAMENTO WHERE RF_CARACTERISTICA = @CARAC  
		  
		  END  
		--WHILE 1=1 ***********************************************************************************************************************

		-- LOG   

		IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
		BEGIN  
			INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
			VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Fim: SANPP_RF_VALORIZACAO / SANPP_RF_VALZ_ESTQ_GERENCIAL - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)) )  
		END  

	END
	--***********************************************************************************************************************
	--IF @SELECT_OU_EXEC = 'E'
	
	--***********************************************************************************************************************
    IF @SELECT_OU_EXEC = '' OR @SELECT_OU_EXEC = 'S'
	  BEGIN
  
		 --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 212

		 IF @GERAR_LOG_BATCH = 'S'  
		 BEGIN  
		  INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
		  VALUES (@DT_PROCESSO, 'MSG', @SPID, GETDATE(), 'Processo de ' + @TIPO_PROCESSO + ' Iniciado - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
		 END  
  
		 --TABELA MAE COM AS INFORMACOES NECESSARIAS PARA VALORIZAR EM LOTE  
		 CREATE TABLE #OPERACOES_GERAL  
		  (  
		  RF_CARACTERISTICA CHAR(20),  
		  PFPJ_APELIDO_EMPRESA CHAR(15),  
		  PFPJ_CUSTODIANTE CHAR(15),  
		  PFPJ_CORRENTISTA CHAR(15),  
		  TIPO_ESTOQUE  CHAR(02),  
		  CD_CATG   INT,  
		  RFM_DATA  DATETIME,  
		  ATV_FCVALORIZ  CHAR(03),  
		  ATV_PUBLICO  CHAR(01),  
		  IC_FIDC   CHAR(01),  
		  QTDE_ABERTO  FLOAT,  
		  QTDE_MOVIMENTOS  INT,  
		  ESTOQUE_ORI  CHAR(02),  
		  CD_CLFC_3068  INT,  
		  CARAC_ORI  CHAR(20),  
		  FER_CHAVE  CHAR(15),  
		  EH_FUNDO  CHAR(01),  
		  MERCADO_1DIA  CHAR(01),  
		  DT_ULTIMA_COTA_LIBERADA DATETIME NULL,  
		  FDO_MES_BALANCO  TINYINT NULL,  
		  ATV_CODIGO  CHAR(15) NULL,  
		  ATV_AP   CHAR(01) NULL,  
		  IDX_PRE   CHAR(01) NULL,  
		  IDX_FCALC  CHAR(03) NULL,  
		  IDX_CODIGO  CHAR(15) NULL,  
		  RF_DTCAUTELA  DATETIME NULL,  
		  RF_EMISSAO  DATETIME NULL,  
		  RF_VENCTO  DATETIME NULL,  
		  CTB_CURVA  CHAR(01) NULL,  
		  SGL_MEDA  CHAR(15) NULL,  
		  ATV_LOTE  FLOAT NULL,  
		  DT_AQUISICAO  DATETIME NULL,  
		  FIN_TRUNCA  CHAR(01) NULL,  
		  RF_TRIB_IR  CHAR(01) NULL,  
		  RF_TRIB_IOF  CHAR(01) NULL,  
		  RF_FCALC_IOFR  CHAR(03) NULL,  
		  RF_FCALC_IR  CHAR(03) NULL,  
		  TEM_MOVTO_RETROATIVO CHAR(01) NULL,  
		  QTDE_NAO_ZERADO  INT NULL,  
		  CUPOM   FLOAT NULL,  
		  RF_EMISSAO2  DATETIME NULL,  
		  RF_VENCTO2  DATETIME   NULL
  
		  )  
		 CREATE TABLE #OPERACOES  
		  (  
		  RF_CARACTERISTICA CHAR(20),  
		  EH_FUNDO  CHAR(01) NULL,  
		  DT_ULTIMA_COTA_LIBERADA DATETIME NULL
		  )  
		 CREATE TABLE #OPRC_RETROATIVA  
		  (  
		  RF_CARACTERISTICA CHAR(20)  
		  )  
  
		 --IRA GUARDAR AS OPERACOES QUE NAO SERAO VALORIZADAS EM LOTE  
		 CREATE TABLE #OPRC_NAO_LOTE  
		  (  
		  RF_CARACTERISTICA CHAR(20),  
		  ESTOQUE_ORI  CHAR(02),  
		  ATV_FCVALORIZ  CHAR(03),  
		  EH_FUNDO  CHAR(01),  
		  DT_ULTIMA_COTA_LIBERADA DATETIME,  
		  TEM_MOVTO_RETROATIVO CHAR(01)  
		  )  
  
		 -- TABELA COM AS INFORMACOES DIA-A-DIA DAS OPERACOES VALORIZADAS EM LOTE  
		 CREATE TABLE #OPRC_LOTE  
		  (  
		  RF_CARACTERISTICA CHAR(20),  
		  RFS_DATA  DATETIME,  
		  EH_RESERVA  CHAR(01),  
		  RFS_DATA_ANTERIOR DATETIME,  
		  RFX_FCALC  CHAR(03),  
		  RFX_RESULTADO  CHAR(03),  
		  RFX_PARTIDA  DATETIME,  
		  PU_PARTIDA  FLOAT,  
		  RFX_PERC  FLOAT,  
		  DU_EMIS_CALC  FLOAT,  
		  DU_EMIS_VCMT  FLOAT,  
		  DU_PRTD_VCMT  FLOAT, -- PARTIDA E VENCIMENTO  
		  DU_CALC_VCMT  FLOAT,  
		  RFS_PRINCIPAL  FLOAT,  
		  PRINCIPAL_ABERTURA FLOAT,  
		  RFS_QTDE  FLOAT,  
		  RFS_QTDE_C  FLOAT,  
		  RFS_FIN_C  FLOAT,  
		  RFS_QTDE_V  FLOAT,  
		  RFS_FIN_V  FLOAT,  
		  RFS_TAXA_MEDIA  FLOAT,  
		  RFS_TAXA_MEDIA_U FLOAT,  
		  RFS_TAXA_MERCADO FLOAT,  
		  RFS_PU_UTEIS  FLOAT,  
		  RFS_PU_CORRIDOS  FLOAT,  
		  RFS_PU_MERCADO  FLOAT,  
		  RFS_PU_MERCADO_ANT FLOAT,  
		  V_PU_CTBL  FLOAT,  
		  RFS_RESULTADO  FLOAT,  
		  RFS_IOF   FLOAT,  
		  IOF_C   FLOAT,  
		  IOF_V   FLOAT,  
		  VAR_CORRECAO  FLOAT,  
		  RFS_JUROS  FLOAT,  
		  RENDIMENTO  FLOAT,  
		  FINANCEIRO_CURVA FLOAT,  
		  QTD_PROPORCIONAL_MOV FLOAT,  
		  PROPORCIONAL_MOV FLOAT,  
		  JUROS_BASE  FLOAT,  
		  RFS_CORRECAO  FLOAT,  
		  RFS_JUROS_ANT  FLOAT,  
		  RFS_CORRECAO_ANT FLOAT,  
		  PGT_JUROS  FLOAT,  
		  LC_SITUACAO  CHAR(01),  
		  RFS_APROPRIAR  FLOAT,  
		  RFS_APROPRIAR_ANT FLOAT,  
		  IR_ABERTURA  FLOAT,  
		  QTD_CTBL  FLOAT,  
		  PRINCIPAL_CTBL  FLOAT,  
		  PU_U_ANTERIOR  FLOAT,  -- UTILIZADO PARA CALCULO DO JUROS CONTABIL PARA FUNDOS  
		  V_JURS_CTBL  FLOAT,  
		  V_JURS_CTBL_ANTR FLOAT,  
		  V_CORC_CTBL  FLOAT,  
		  V_CORC_CTBL_ANTR FLOAT,  
		  RFS_AGDG  FLOAT,  
		  RFS_AGDG_C  FLOAT,  
		  RFS_AGDG_U  FLOAT,  
		  RFS_AGDG_ANT  FLOAT,  
		  RFS_PROVISAO_ANT FLOAT,  
		  RFS_PROVISAO_DIF FLOAT,  
		  RFS_PROVISAO  FLOAT,  
		  RFS_PROVISAO_TRANSF FLOAT,  
		  PROVANT_ANTERIOR FLOAT,  
		  PROVDIF_ANTERIOR FLOAT,  
		  PROV_ANTERIOR  FLOAT,  
		  V_FATR_ACUD_UTES_ANT FLOAT,  
		  V_FATR_ACUD_MERC_ANT FLOAT,  
		  V_FATR_ACUD_UTES FLOAT,  
		  V_FATR_ACUD_MERC FLOAT,  
		  PDD_FXA_SEQ  INT,  
		  V_PDD   FLOAT,  
		  V_PZ_MDIO_CALD  FLOAT,  
		  V_PZ_MDIO_AJTD  FLOAT,  
		  V_DURT_CALD  FLOAT,  
		  V_PU_NEGC  FLOAT,  
		  RFS_IOFR  FLOAT,  
		  RFS_IR   FLOAT,  
		  RFS_IR_ANT  FLOAT,  
		  ULTIMA_COTACAO  FLOAT,  
		  VALOR_CENARIO  FLOAT,  
		  SGL_MEDA  CHAR(15)  
		  )  
		 CREATE TABLE #OPRC_NAO_PADRONIZADA_SEM_FLUXO  
		  (  
		  RF_CARACTERISTICA CHAR(20)  
		  )  
  
		 IF @DT_ICAL > @DT_FNAL  
		 BEGIN  
		  SELECT  
		   @ERR_MSG = ' DATA FINAL NAO PODE SER MENOR QUE A DATA INICIAL. '  
    
		  IF @RETORNA_MSG <> 'S'  
		   RAISERROR 70000 @ERR_MSG  
		  ELSE  
		   SELECT @MENSAGEM_ERRO = @ERR_MSG  
  
		  RETURN  
		 END  
  
		 IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		 BEGIN  
		  -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		  RETURN  
		 END  
  
		 -- OTIMIZAR FILTRO  
		 SELECT  
		  @CH_DT_ICAL = CONVERT(CHAR(08), DATEADD(DAY, -1, @DT_ICAL), 112),  
		  @CH_DT_FNAL = CONVERT(CHAR(08), DATEADD(DAY,  1, @DT_FNAL), 112)  
  
		 SELECT  
		  @WHERE = ''  
  
		  
		IF ISNULL(RTRIM(@RF_CARACTERISTICA), '') <> ''  
		  SELECT  
		   @WHERE = @WHERE + '  
		   AND A.RF_CARACTERISTICA = ''' + @RF_CARACTERISTICA + ''''  
		IF ISNULL(RTRIM(@PFPJ_CUSTODIANTE), '') <> ''  
		  SELECT  
		   @WHERE = @WHERE + '  
		   AND A.PFPJ_CUSTODIANTE = ''' + @PFPJ_CUSTODIANTE + ''''  
		IF ISNULL(RTRIM(@PFPJ_APELIDO_EMPRESA), '') <> ''  
		  SELECT  
		   @WHERE = @WHERE + '  
		   AND A.PFPJ_APELIDO_EMPRESA = ''' + @PFPJ_APELIDO_EMPRESA + ''''  
		IF ISNULL(RTRIM(@ATV_CODIGO), '') <> ''              
		   SELECT              
			@WHERE = @WHERE + '              
			AND A.ATV_CODIGO  = ''' + @ATV_CODIGO + ''''              
		IF ISNULL(RTRIM(@IDX_CODIGO), '') <> ''  
		  SELECT  
		   @WHERE = @WHERE + '  
		   AND A.IDX_CODIGO  = ''' + @IDX_CODIGO + ''''  
		IF ISNULL(RTRIM(@TIPO_ESTOQUE), '') <> ''  
		  SELECT  
		   @WHERE = @WHERE + '  
		   AND A.TIPO_ESTOQUE  = ''' + @TIPO_ESTOQUE + ''''  
		IF ISNULL(@PIT_CDBFC_ID_RELM, 0) > 0  AND EXISTS (SELECT 1 FROM SANT515_GE_PARAMETRO WHERE CH_PARM = 'VALZ_CDBFC' AND CN_PARM = '1')
		  BEGIN  

			if @@spid = 109 select 'rf2500', 435

			  SELECT  
			   @WHERE = @WHERE + '  
			   AND A.RF_CARACTERISTICA  IN (
					  SELECT DISTINCT RFM.RF_CARACTERISTICA
					  FROM SANT1675_GE_MQS_MSG_FILA T1675  
					  JOIN RF_MOVIMENTACAO RFM
						ON RFM.NRO_OPERACAO  = T1675.ID_PRO
					  WHERE T1675.ID_RELM    = ' + CONVERT(VARCHAR(10), @PIT_CDBFC_ID_RELM) + '
					  AND T1675.DT_MVTO    = ''' + CONVERT(VARCHAR(10), @PSD_CDBFC_DT_MVTO, 120) + '''
					  AND T1675.CD_STAT_RG = ''V''
					  AND LEFT(T1675.CN_MSG, 3) = ''SCC''
					)'

		  END  

		 -- IGNORAR CARACTERISTICAS JA VALORIZADAS (SOMENTE NA VALORIZACAO BATCH)  
  
		 -- BUSCANDO OPERACOES PADRONIZADAS  
		 
		 -- *********************************************************************************************************
		 IF @GERAR_LOG_BATCH = 'N' OR (@GERAR_LOG_BATCH = 'S' AND @VLZ_NP = 'N')  
		 BEGIN  

			--- THIAGO -> LTN-1000
			if @@spid = 109 select 'rf2500', 461

			 --**********************************************************************************************************************
			 -- IF @GERAR_LOG_BATCH = 'S' AND ISNULL(@DT_PROCESSO, '2099-12-31') <> '2099-12-31'  
			IF @GERAR_LOG_BATCH = 'S' AND ISNULL(@DT_PROCESSO, '2099-12-31') <> '2099-12-31'  
			BEGIN

				if @@spid = 109 select 'rf2500', 468

				SELECT @STR = 'SELECT		DISTINCT A.RF_CARACTERISTICA
				FROM		(SELECT	RF_CARACTERISTICA,ATV_CODIGO,IDX_CODIGO
				FROM	RENDA_FIXA (NOLOCK)
				WHERE	RF_OK = ''S''   
				AND		RF_EMISSAO < ''' + @CH_DT_FNAL + '''          
				AND		RF_DTLIQ > ''' + @CH_DT_ICAL + '''       
				) A 
				JOIN		RF_MERCADORIA B (NOLOCK) ON A.ATV_CODIGO = B.ATV_CODIGO
				LEFT JOIN	SANT1984_RF_CONTROLE_VALORIZACAO (NOLOCK) D ON A.RF_CARACTERISTICA=D.TXT_DESC_EVE AND DT_B = ''' + CONVERT(CHAR(08), @DT_PROCESSO, 112) + ''' AND SGL_T_RG = ''CARAC''
				WHERE		B.IC_OPRC_NAO_PADR = ''N''
				--			B.IC_OPRC_NAO_PADR <> ''S''
				AND			ISNULL(B.IC_ATVA, ''S'') = ''S''
				AND			A.RF_CARACTERISTICA IN (SELECT C.RF_CARACTERISTICA FROM RF_INDEXACAO C (NOLOCK) WHERE C.RFX_PARTIDA < ''' + @CH_DT_FNAL + ''' AND C.RFX_VOLTA > ''' + @CH_DT_ICAL + ''')
				AND			D.TXT_DESC_EVE IS NULL ' + @WHERE
			END 
			ELSE 
			BEGIN
				
				--- THIAGO -> LTN-1000
				if @@spid = 109 select 'rf2500', 488

				SELECT  
				@STR = '  
				SELECT DISTINCT  
				A.RF_CARACTERISTICA  
				FROM  
				RENDA_FIXA A (NOLOCK),  
				RF_MERCADORIA B (NOLOCK),  
				RF_INDEXACAO C (NOLOCK)  
				WHERE  
				A.ATV_CODIGO = B.ATV_CODIGO  
				AND A.RF_CARACTERISTICA = C.RF_CARACTERISTICA  
				AND A.RF_OK = ''S''  
				AND B.IC_OPRC_NAO_PADR <> ''S''   
				AND ISNULL(B.IC_ATVA, ''S'') = ''S''  
				AND A.RF_EMISSAO < ''' + @CH_DT_FNAL + '''  
				AND A.RF_DTLIQ > ''' + @CH_DT_ICAL + '''  
				AND C.RFX_PARTIDA < ''' + @CH_DT_FNAL + '''  
				AND C.RFX_VOLTA > ''' + @CH_DT_ICAL + '''  
				--AND A.ATV_cODIGO = ''CDB DI'' AND A.RF_EMISSAO = ''20100811''  
				-- AND A.RF_CARACTERISTICA = ''00000000000021187267''  
				--AND A.RF_CARACTERISTICA IN (''00000000000009108058'', ''00000000000011310179'', ''00000000000008971268'', ''00000000000011684304'', ''00000000000027700838'', ''00000000000027700839'')   -- TESTE_BICUDO  
				--AND A.RF_CARACTERISTICA IN (SELECT Rf_CARACTERISTICA FROM ##TMP_OPRC)  
				--    AND ISNULL(B.IC_FIDC, ''N'') <> ''S'' -- FIDC ' + @WHERE 
			END
			-- IF @GERAR_LOG_BATCH = 'S' AND ISNULL(@DT_PROCESSO, '2099-12-31') <> '2099-12-31'  
 			 --**********************************************************************************************************************

			if @@spid = 109 select 'rf2500', 518
			if @@spid = 109 SELECT @STR

			  INSERT INTO  
			   #OPERACOES (RF_CARACTERISTICA)
			   EXEC(@STR)  

			if @@spid = 109 select 'rf2500', 525
  
			  --DEVE BUSCAR AS OPERACOES NAO PADRONIZADAS APENAS NO PROCESSO LOTE PARA OS PAPEIS BULLETS  
			  --O PROCESSO DE COMPROMISSADA NAO DEVE SELECIONAR ESTAS OPERACOES  
			  -- *******************************************************************************************************************
			  -- IF @VLZ_LOTE = 'S'
			  IF @VLZ_LOTE = 'S'  
			  BEGIN    
				   SELECT  
					@STR = '  
					 SELECT DISTINCT  
					  A.RF_CARACTERISTICA  
					 FROM  
					  RENDA_FIXA A (NOLOCK),  
					  RF_MERCADORIA B (NOLOCK),  
					  RF_INDEXACAO C (NOLOCK),  
					  RF_MOVIMENTACAO D (NOLOCK)  
					 WHERE  
					  A.ATV_CODIGO = B.ATV_CODIGO  
					 AND A.RF_CARACTERISTICA = C.RF_CARACTERISTICA  
					 AND A.RF_CARACTERISTICA = D.RF_CARACTERISTICA  
					 AND A.RF_OK = ''S''  
					 AND B.IC_OPRC_NAO_PADR = ''S''  
					 AND D.RFM_NIP <> ''''  
					 AND ISNULL(B.IC_ATVA, ''S'') = ''S''  
					 AND A.RF_EMISSAO < ''' + @CH_DT_FNAL + '''  
					 AND A.RF_DTLIQ > ''' + @CH_DT_ICAL + '''  
					 AND C.RFX_PARTIDA < ''' + @CH_DT_FNAL + '''  
					 AND C.RFX_VOLTA > ''' + @CH_DT_ICAL + '''  
				 --AND A.ATV_cODIGO = ''CDB DI'' AND A.RF_EMISSAO = ''20100811''  
				-- AND A.RF_CARACTERISTICA = ''00000000000021187267''  
				 --AND A.RF_CARACTERISTICA IN (''00000000000009108058'', ''00000000000011310179'', ''00000000000008971268'', ''00000000000011684304'', ''00000000000027700838'', ''00000000000027700839'')   -- TESTE_BICUDO  
				 --AND A.RF_CARACTERISTICA IN (SELECT Rf_CARACTERISTICA FROM ##TMP_OPRC)  
				 --    AND ISNULL(B.IC_FIDC, ''N'') <> ''S'' -- FIDC  
					 ' + @WHERE  

					if @@spid = 109 select 'rf2500', 693
					if @@spid = 109 SELECT @STR
				   INSERT INTO  
					#OPERACOES (RF_CARACTERISTICA)  
				   EXEC(@STR)  
			   ---------------------------------------------------------------------  
			   --INSERIR NO PROCESSO EM LOTE AS OPERACOES NAO PADRONIZADAS SEM FLUXO  
			   ---------------------------------------------------------------------  
				   SELECT  
					@STR = '  
					 SELECT DISTINCT  
					  A.RF_CARACTERISTICA  
					 FROM  
					  RENDA_FIXA  A (NOLOCK),  
					  SANT643_RF_REPAC_TITULO B (NOLOCK),  
					  RF_MERCADORIA  C (NOLOCK),  
					  RF_INDEXACAO  D (NOLOCK)  
					 WHERE  
					  A.TITULO_ID = B.TITULO_ID  
					 AND A.ATV_CODIGO = C.ATV_CODIGO  
					 AND A.RF_CARACTERISTICA = D.RF_CARACTERISTICA  
					 AND A.RF_OK = ''S''  
					 AND C.IC_OPRC_NAO_PADR = ''S''  
					 AND ISNULL(C.IC_ATVA, ''S'') = ''S''  
   
					 AND ((A.RF_EMISSAO < ''' + @CH_DT_FNAL + ''' AND B.DT_LQDC > ''' + @CH_DT_ICAL + '''))  
					 AND D.RFX_PARTIDA < ''' + @CH_DT_FNAL + '''  
					 AND D.RFX_VOLTA > ''' + @CH_DT_ICAL + '''  
					 AND A.RF_CARACTERISTICA NOT IN (SELECT Rf_CARACTERISTICA FROM #OPERACOES)  
  
					  AND  A.ATV_CODIGO NOT IN (''CRA'', ''CRI'', ''DEBENTURES'', ''DEBENTURES INCT'', ''CPR F'', ''NP'', ''COTAS DE FUNDOS'')  
					  AND  A.PFPJ_APELIDO_EMPRESA NOT IN (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO)  
					  AND  A.IDX_CODIGO      IN (''CDI'', ''PRE'')  
  
				 --AND A.RF_cARACTERISTICA IN (''00000000000001443163'',''00000000000001443165'',''00000000000002462025'')  
				-- AND A.RF_CARACTERISTICA = ''00000000000021187267''  
				 --AND A.RF_CARACTERISTICA IN (''00000000000009108058'', ''00000000000011310179'', ''00000000000008971268'', ''00000000000011684304'', ''00000000000027700838'', ''00000000000027700839'')   -- TESTE_BICUDO  
				 --AND A.RF_CARACTERISTICA IN (SELECT Rf_CARACTERISTICA FROM ##TMP_OPRC)  
				 -- AND A.ATV_cODIGO = ''LFS''  
					 AND B.ID_RPAC = (SELECT MAX(ID_RPAC) FROM SANT643_RF_REPAC_TITULO WHERE TITULO_ID = A.TITULO_ID AND DT_INIC_RPAC < ''' + @CH_DT_FNAL + ''' AND DT_FIM_RPAC > ''' + @CH_DT_ICAL + ''')  
					 ' + @WHERE  

					if @@spid = 109 select 'rf2500', 743
					if @@spid = 109 SELECT @STR

				   INSERT INTO  
					#OPERACOES (RF_CARACTERISTICA)  
				   EXEC(@STR)  
   
					TRUNCATE TABLE #OPRC_NAO_PADRONIZADA_SEM_FLUXO  
					INSERT INTO   #OPRC_NAO_PADRONIZADA_SEM_FLUXO  
						   SELECT DISTINCT  
							   RDF.RF_CARACTERISTICA  
             
						   FROM   #OPERACOES               ONL  
						   JOIN   RENDA_FIXA                   RDF  
							 ON   RDF.RF_CARACTERISTICA        = ONL.RF_CARACTERISTICA  
						   JOIN   RF_INDEXACAO                 RFI  
							 ON   RFI.RF_CARACTERISTICA        = RDF.RF_CARACTERISTICA  
						   JOIN   RF_TITULO                    RFT  
							 ON   RFT.TITULO_ID                = RDF.TITULO_ID  
						   JOIN   SANT643_RF_REPAC_TITULO      T643  
							 ON   T643.TITULO_ID             = RFT.TITULO_ID  
						   JOIN   SANT644_RF_AGENDA_EVENTO     T644  
							 ON   T644.TITULO_ID               = T643.TITULO_ID  
							 AND  T644.ID_RPAC                 = T643.ID_RPAC  
						   WHERE  RDF.ATV_CODIGO               IN (SELECT ATV_CODIGO FROM RF_MERCADORIA WHERE IC_OPRC_NAO_PADR = 'S')  
				   --          AND  RDF.IDX_CODIGO               = 'CDI'  
							 AND  RDF.TIPO_ESTOQUE             = '00'  
					  AND  RDF.ATV_CODIGO NOT IN ('CRA', 'CRI', 'DEBENTURES', 'DEBENTURES INCT', 'CPR F', 'NP', 'COTAS DE FUNDOS')  
					  AND  RDF.PFPJ_APELIDO_EMPRESA NOT IN (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO)  
					  AND  RDF.IDX_CODIGO      IN ('CDI', 'PRE')  
					  AND  RFI.RFX_PARTIDA      <= RFT.TIT_EMISSAO  
						AND RDF.RF_AGENTE IN (SELECT PFPJ_APELIDO FROM EMPRESA)  
   
				   -- ??? tipo de estoque 09 precisa ?? verificar  
				   --           AND  RDF.TIPO_ESTOQUE_ORIGINAL    = '00'           
						   GROUP BY   
							 RDF.RF_CARACTERISTICA  
						   HAVING ( ( MAX(T644.ID_RPAC) = MIN(T644.ID_RPAC) )     -- apenas os que não possuem repactuação  
									AND   
									( MAX(T644.DT_EVE) = MIN(T644.DT_EVE) )       -- apenas os que tem um único evento (vencimento)  
								  )  
   
				   DELETE   
					A  
				   FROM  
					#OPERACOES A  
				   JOIN  RENDA_FIXA B  
				   ON A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
				   JOIN RF_MOVIMENTACAO               MOV (NOLOCK)  
				   ON MOV.RF_CARACTERISTICA         = A.RF_CARACTERISTICA  
				   WHERE   
					(MOV.RFM_DATA + MOV.RFM_HORA) = (  SELECT MIN(RFM_DATA + RFM_HORA)   
															 FROM   RF_MOVIMENTACAO (NOLOCK)  
															 WHERE  RFM_DT            IN ('A', 'C')   
															   AND  RFM_OK            = 'S'   
															   AND  RF_CARACTERISTICA = MOV.RF_CARACTERISTICA   
						)  AND  
					B.ATV_CODIGO   IN  (SELECT ATV_CODIGO FROM RF_MERCADORIA WHERE IC_OPRC_NAO_PADR = 'S') AND  
					A.RF_CARACTERISTICA  NOT IN  (SELECT RF_CARACTERISTICA FROM #OPRC_NAO_PADRONIZADA_SEM_FLUXO) AND  
					B.PFPJ_APELIDO_EMPRESA  NOT IN   (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO) AND  
					MOV.RFM_NIP   =  '' --MANTER OPERACOES COMPROMISSADAS NA ROTINA DE LOTE  
  
			  END 
			  -- IF @VLZ_LOTE = 'S'  
  			  -- *******************************************************************************************************************
			  -- IF @VLZ_LOTE = 'S'
  
			-- SELECT '#OPERACOES2'  
			-- SELECT * FROM #OPERACOES  
		 END  
		 -- IF @GERAR_LOG_BATCH = 'N' OR (@GERAR_LOG_BATCH = 'S' AND @VLZ_NP = 'N')
		 -- *********************************************************************************************************
  
		-- BUSCANDO OPERACOES NAO PADRONIZADAS  
		-- *********************************************************************************************************
			IF @GERAR_LOG_BATCH = 'N' OR (@GERAR_LOG_BATCH = 'S' AND @VLZ_NP = 'S')  
			BEGIN  
  
				SELECT  
				@STR = '  
				SELECT DISTINCT  
					A.RF_CARACTERISTICA  
				FROM  
					RENDA_FIXA  A (NOLOCK),  
					SANT643_RF_REPAC_TITULO B (NOLOCK),  
					RF_MERCADORIA  C (NOLOCK),  
					RF_INDEXACAO  D (NOLOCK)  
				WHERE  
					A.TITULO_ID = B.TITULO_ID  
				AND A.ATV_CODIGO = C.ATV_CODIGO  
				AND A.RF_CARACTERISTICA = D.RF_CARACTERISTICA  
				AND A.RF_OK = ''S''  
				AND C.IC_OPRC_NAO_PADR = ''S''  
				AND ISNULL(C.IC_ATVA, ''S'') = ''S''  
  
				AND ((A.RF_EMISSAO < ''' + @CH_DT_FNAL + ''' AND B.DT_LQDC > ''' + @CH_DT_ICAL + '''))  
				AND D.RFX_PARTIDA < ''' + @CH_DT_FNAL + '''  
				AND D.RFX_VOLTA > ''' + @CH_DT_ICAL + '''  
				AND A.RF_CARACTERISTICA NOT IN (SELECT Rf_CARACTERISTICA FROM #OPERACOES)  
			--AND A.RF_cARACTERISTICA IN (''00000000000001443163'',''00000000000001443165'',''00000000000002462025'')  
			-- AND A.RF_CARACTERISTICA = ''00000000000021187267''  
			--AND A.RF_CARACTERISTICA IN (''00000000000009108058'', ''00000000000011310179'', ''00000000000008971268'', ''00000000000011684304'', ''00000000000027700838'', ''00000000000027700839'')   -- TESTE_BICUDO  
			--AND A.RF_CARACTERISTICA IN (SELECT Rf_CARACTERISTICA FROM ##TMP_OPRC)  
			-- AND A.ATV_cODIGO = ''LFS''  
				AND B.ID_RPAC = (SELECT MAX(ID_RPAC) FROM SANT643_RF_REPAC_TITULO WHERE TITULO_ID = A.TITULO_ID AND DT_INIC_RPAC < ''' + @CH_DT_FNAL + ''' AND DT_FIM_RPAC > ''' + @CH_DT_ICAL + ''')  
				' + @WHERE  

			--- THIAGO -> LTN-1000
			if @@spid = 109 select 'rf2500', 710
			if @@spid = 109 SELECT @STR

				INSERT INTO  
				#OPERACOES (RF_CARACTERISTICA)  
				EXEC(@STR)  
  
		END

		-- BUSCANDO OPERACOES NAO PADRONIZADAS  
		-- *********************************************************************************************************
		 CREATE UNIQUE CLUSTERED INDEX IDX_OPERACOES ON #OPERACOES (RF_CARACTERISTICA)  
    
			-- BUSCA OPERACOES COM MOVIMENTACAO RETROATIVA (EM D-1)  
  			 IF @CONSIDERAR_RETROATIVAS = 'S'  
			 BEGIN  
			  -- BUSCA O DIA UTIL ANTERIOR AO INICIO DO PERIODO  
  
			  SELECT @DT_RESERVA_ANTERIOR = @DT_ICAL  
  
			  EXEC SIAN_SP_RESERVA_ANTERIOR 'SAFRABM',  
				  'A',  
				  @DT_RESERVA_ANTERIOR OUTPUT,  
				  0  
  
			  SELECT @CH_RESERVA_ANTERIOR = CONVERT(CHAR(10), @DT_RESERVA_ANTERIOR, 112)  
  
				if @@spid = 109 select 'rf2500', 742, @CH_RESERVA_ANTERIOR

			  -- BUSCA OPERACOES QUE TIVERAM MOVIMENTO RETROATIVO NO DIA ANTERIOR  
  
			  INSERT INTO #OPRC_RETROATIVA (RF_CARACTERISTICA)  
			  EXEC ('  
			   SELECT DISTINCT A.RF_CARACTERISTICA  
			   FROM  
				RENDA_FIXA A (NOLOCK)  
			   JOIN RF_MOVIMENTACAO B (NOLOCK)  
			   ON A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
			   WHERE  
				B.RFM_DATA = ''' + @CH_RESERVA_ANTERIOR + '''  
			   AND B.RFM_DATA_REGISTRO > ''' + @CH_RESERVA_ANTERIOR + '''  
			   AND B.RFM_OK = ''S''  
			--AND A.ATV_cODIGO = ''DEBENTURES''  
			-- AND A.RF_CARACTERISTICA = ''00000000000021187267''  
			--AND A.RF_CARACTERISTICA IN (''00000000000009108058'', ''00000000000011310179'', ''00000000000008971268'', ''00000000000011684304'', ''00000000000027700838'', ''00000000000027700839'')   -- TESTE_BICUDO  
			--AND A.RF_CARACTERISTICA IN (SELECT Rf_CARACTERISTICA FROM ##TMP_OPRC)  
			   ' + @WHERE  
			  )  
    
			  -- INSERE AS OPERACOES QUE AINDA NAO FORAM SELECIONADAS  
  
			  INSERT INTO #OPERACOES (RF_CARACTERISTICA)  
			  SELECT RF_CARACTERISTICA  
			  FROM  
			   #OPRC_RETROATIVA
			  WHERE  
			   RF_CARACTERISTICA NOT IN (SELECT RF_CARACTERISTICA FROM #OPERACOES)  
			 END  
			-- BUSCA OPERACOES COM MOVIMENTACAO RETROATIVA (EM D-1)  
  
			if @@spid = 109 select 'rf2500', 775
			if @@spid = 109 SELECT * FROM #OPERACOES

		  IF ISNULL(@PIT_CDBFC_ID_RELM, 0) > 0 AND NOT EXISTS (SELECT 1 FROM SANT515_GE_PARAMETRO WHERE CH_PARM = 'VALZ_CDBFC' AND CN_PARM = '1')
		  BEGIN  
  
			if @@spid = 109 select 'rf2500', 772

			  DELETE A  
			  FROM #OPERACOES A  
			  LEFT JOIN (  
					SELECT RDF.RF_CARACTERISTICA  
					FROM  #OPERACOES OPRC  
					JOIN  RENDA_FIXA RDF  
					  ON  RDF.RF_CARACTERISTICA = OPRC.RF_CARACTERISTICA  
					JOIN  RF_MOVIMENTACAO RFM  
					  ON  RFM.RF_CARACTERISTICA = RDF.RF_CARACTERISTICA  
					JOIN  SANT819_RF_OPERACAO_SIAN T819  
					  ON  T819.NRO_OPERACAO = RFM.NRO_OPERACAO  
					JOIN  SANT1675_GE_MQS_MSG_FILA T1675  
					  ON  T1675.ID_RELM    = @PIT_CDBFC_ID_RELM  
					  AND T1675.DT_MVTO    = @PSD_CDBFC_DT_MVTO  
					  AND T1675.ID_PRO     = T819.NRO_OPERACAO  
					  AND T1675.CD_STAT_RG = 'V'  
					JOIN  SANT753_RF_OPERACAO T753  
					  ON  T753.CD_OPRC = T819.CD_OPRC  
					  AND T753.NM_PARTE = RDF.PFPJ_APELIDO_EMPRESA  
					JOIN  SANT1220_RF_IDENT_OPRC T1220  
					  ON  T1220.CD_OPRC = T753.CD_OPRC  
					  AND T1220.CD_T_IDC = 14  
				  ) B   
				  ON A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
			  WHERE B.RF_CARACTERISTICA IS NULL  
  
		  END  
  
		 -- BUSCA INFORMACOES GERAIS DAS OPERACOES A SEREM VALORIZADAS  
		 SELECT  
		  @STR = '  
		   INSERT INTO #OPERACOES_GERAL  
			(  
			RF_CARACTERISTICA,  
			PFPJ_APELIDO_EMPRESA,  
			PFPJ_CUSTODIANTE,  
			PFPJ_CORRENTISTA,  
			TIPO_ESTOQUE,  
			CD_CATG,  
			RFM_DATA,  
			ATV_FCVALORIZ,  
			ATV_PUBLICO,  
			IC_FIDC,  
			QTDE_ABERTO,  
			QTDE_MOVIMENTOS,  
			ESTOQUE_ORI,  
			CD_CLFC_3068,  
			CARAC_ORI,  
			FER_CHAVE,  
			EH_FUNDO,  
			MERCADO_1DIA,  
			ATV_CODIGO,  
			ATV_AP,  
			 IDX_PRE,  
			IDX_FCALC,  
			IDX_CODIGO,  
			RF_DTCAUTELA,  
			RF_EMISSAO,  
			RF_VENCTO,  
			CTB_CURVA,  
			SGL_MEDA,  
			ATV_LOTE,  
			DT_AQUISICAO,  
			FIN_TRUNCA,  
			RF_TRIB_IR,  
			RF_TRIB_IOF,  
			RF_FCALC_IOFR,  
			RF_FCALC_IR,  
			QTDE_NAO_ZERADO,  
			CUPOM,  
			RF_EMISSAO2,  
			RF_VENCTO2  
			)  
		   SELECT  
			A.RF_CARACTERISTICA,  
			A.PFPJ_APELIDO_EMPRESA,  
			A.PFPJ_CUSTODIANTE,  
			A.PFPJ_CORRENTISTA,  
			A.TIPO_ESTOQUE,  
			A.CD_CATG,  
			MAX (B.RFM_DATA)  RFM_DATA,  
			D.ATV_FCVALORIZ,  
			F.ATV_PUBLICO,  
			ISNULL(F.IC_FIDC, ''N''),  
			ABS( SUM( CASE  
			  WHEN B.RFM_DT = ''A'' THEN B.RFM_QTDE  
			  WHEN B.RFM_DT = ''C'' THEN B.RFM_QTDE * -1  
			  ELSE 0 END )) QTDE_ABERTO,  
			COUNT(*)   QTDE_MOVIMENTOS,  
			A.TIPO_ESTOQUE   ESTOQUE_ORI,  
			ISNULL(A.CD_CLFC_3068, 0) CD_CLFC_3068,  
			A.RF_CARACTERISTICA  CARAC_ORI,  
			A.PFPJ_APELIDO_EMPRESA  FER_CHAVE,  
			''N''    EH_FUNDO,  
			''S''    MERCADO_1DIA,  
			A.ATV_CODIGO,  
			A.ATV_AP,  
			E.IDX_PRE,  
			E.IDX_FCALC,  
			I.IDX_CODIGO, --WEVESAN  
			A.RF_DTCAUTELA,  
			A.RF_EMISSAO,  
			A.RF_VENCTO,  
			A.CTB_CURVA,  
			''''    SGL_MEDA,  
			D.ATV_LOTE,  
			I.RFX_PARTIDA   DT_AQUISICAO,  
			G.FIN_TRUNCA,  
			A.RF_TRIB_IR,  
			A.RF_TRIB_IOF,  
			A.RF_FCALC_IOFR,  
			A.RF_FCALC_IR,  
			SUM( CASE WHEN B.RFM_QTDE > 0 THEN 1 ELSE 0 END),  
			CASE   
			 WHEN A.TIPO_ESTOQUE IN (''01'', ''02'', ''03'') THEN I.RFX_TAXA --RF_INDEXACAO  
			 ELSE A.RF_CUPOM --RENDA_FIXA  
			END RF_CUPOM,  
      
			CASE  
			 WHEN A.TIPO_ESTOQUE in (''01'', ''02'', ''03'') THEN I.RFX_PARTIDA --RF_INDEXACAO  
			 ELSE A.RF_EMISSAO --RENDA_FIXA  
			END RF_EMISSAO2,  
  
			CASE  
			 WHEN A.TIPO_ESTOQUE in (''01'', ''02'', ''03'') THEN I.RFX_VOLTA --RF_INDEXACAO  
			 ELSE A.RF_VENCTO --RENDA_FIXA  
			END RF_VENCTO2   
      
		   FROM  
			RENDA_FIXA A (NOLOCK) JOIN #OPERACOES C ON (A.RF_CARACTERISTICA = C.RF_CARACTERISTICA)  
			JOIN RF_MOVIMENTACAO B (NOLOCK)ON (A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
				AND B.RFM_OK = ''S'')  
			JOIN RF_TITULO D (NOLOCK)ON (A.TITULO_ID = D.TITULO_ID)  
			JOIN RF_MERCADORIA F (NOLOCK)ON (A.ATV_CODIGO = F.ATV_CODIGO)  
			JOIN CODIGO_TITULO G (NOLOCK)ON (D.ATV_CODIGO = G.ATV_CODIGO  
				AND D.IDX_CODIGO = G.IDX_CODIGO  
				AND D.LOCAL_NEGOCIACAO = G.LOCAL_NEGOCIACAO)     
			JOIN RF_INDEXACAO I (NOLOCK)ON (A.RF_CARACTERISTICA = I.RF_CARACTERISTICA) --WEVESAN  
			JOIN INDEXADOR E (NOLOCK)ON (I.IDX_CODIGO = E.IDX_CODIGO)--WEVESAN  
  
			'  
		 SELECT  
		  @STR = @STR + '  
		   GROUP BY  
			A.RF_CARACTERISTICA,  
			A.PFPJ_APELIDO_EMPRESA,  
			A.PFPJ_CUSTODIANTE,  
			A.PFPJ_CORRENTISTA,  
			A.TIPO_ESTOQUE,  
			A.CD_CATG,  
			D.ATV_FCVALORIZ,  
			F.ATV_PUBLICO,  
			F.IC_FIDC,  
			A.CD_CLFC_3068,  
			A.ATV_CODIGO,  
			A.ATV_AP,  
			E.IDX_PRE,  
			E.IDX_FCALC,  
			I.IDX_CODIGO,  
			D.ATV_LOTE,  
			A.RF_DTCAUTELA,  
			A.RF_EMISSAO,  
			A.RF_VENCTO,  
			A.CTB_CURVA,  
			G.FIN_TRUNCA,  
			A.RF_TRIB_IR,  
			A.RF_TRIB_IOF,  
			A.RF_FCALC_IOFR,  
			A.RF_FCALC_IR,  
			A.RF_CUPOM,  
			I.RFX_TAXA,  
			I.RFX_PARTIDA,  
			I.RFX_VOLTA  
      
		   '  
  
		 EXEC (@STR)  
   
		if @@spid = 109 select 'rf2500', 961, @STR
		if @@spid = 109 select * FROM #OPERACOES_GERAL

		 --SELECT * INTO ##OPERACOES FROM #OPERACOES  
		 CREATE UNIQUE CLUSTERED INDEX IDX_CARAC ON #OPERACOES_GERAL (RF_CARACTERISTICA)  
  
		 IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		 BEGIN  
		  -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		  RETURN  
		 END  
  
		 -- MARCA AS OPERACOES QUE POSSUEM MOVIMENTOS RETROATIVOS  
		 IF @CONSIDERAR_RETROATIVAS = 'S'  
		 BEGIN  
		  UPDATE A  
		  SET TEM_MOVTO_RETROATIVO = 'S'  
		  FROM  
		   #OPERACOES_GERAL A  
		  JOIN #OPRC_RETROATIVA B  
		  ON A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
		 END  

		 --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 972

		 -- APAGA AS OPERACOES QUE NAO TEM MAIS QUANTIDADE EM ABERTO  
		 EXEC ('  
		  DELETE FROM  
		   #OPERACOES_GERAL  
		  WHERE  
		   QTDE_ABERTO < 0.01  
		  AND RFM_DATA < ''' + @CH_DT_ICAL + '''  
		  AND ISNULL(TEM_MOVTO_RETROATIVO, ''N'') = ''N''')  
  
		 EXEC ('  
		  DELETE  
		   A  
		  FROM  
		   #OPERACOES_GERAL A,  
		   RF_MOVIMENTACAO  B (NOLOCK)  
		  WHERE  
		   A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
		  AND A.RFM_DATA = B.RFM_DATA  
		  AND A.TIPO_ESTOQUE = ''09''  
		  AND A.QTDE_ABERTO < 0.01  
		  AND A.QTDE_MOVIMENTOS <= 1 -- DANILO 04/01/2008: TRANSFERENCIA DE CATEGORIA PODE TER VARIOS MOVIMENTOS, ALEM DO MOVIMENTO ZERADO  
		  AND B.RFM_OK = ''S''  
		  AND B.RFM_QTDE < 0.01 ')  
  
		 -- LIGIA MUTO - 07/06/2011  
		 -- AJUSTE PARA EXCLUIR OPERAÇÕES COM QTDE ZERADAS (OPERAÇÃO DE ESTOQUE 09 ESTROU EM LOOP DEVIDO AO CÁLCULO DA TIR  
		 -- PORÉM A OPERAÇÃO JÁ ESTAVA VENCIDA)  
		 EXEC(' DELETE #OPERACOES_GERAL WHERE QTDE_NAO_ZERADO = 0')  
  
		 -- SE O PROCESSO FOR EXECUTADO EM LOTE, NAO VALORIZAR DESVINCULOS COM QUANTIDADE ZERADAS  
		 IF rtrim(@RF_CARACTERISTICA) = ''  
		 BEGIN  

		 if @@spid = 109 select 'rf2500', 1007

		  EXEC ('  
		   DELETE  
			A  
		   FROM  
			#OPERACOES_GERAL A,  
			RF_MOVIMENTACAO  B (NOLOCK),  
			TITULOS_BLOQUEADOS C (NOLOCK)  
		   WHERE  
			A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
		   AND A.RF_CARACTERISTICA = C.BLO_CARACTERISTICA  
		   AND A.RFM_DATA = B.RFM_DATA  
		   AND A.TIPO_ESTOQUE = ''09''  
		   AND A.QTDE_ABERTO < 0.01  
		   AND B.RFM_OK = ''S''  
		   AND B.RFM_QTDE < 0.01 ')  
  
		 END  
  
		 -- ATUALIZA O ESTOQUE ORIGINAL  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   ESTOQUE_ORI = B.TIPO_ESTOQUE,  
		   CARAC_ORI = B.RF_CARACTERISTICA  
		  FROM  
		   #OPERACOES_GERAL A,  
		   RENDA_FIXA  B (NOLOCK)  
		  WHERE  
		   A.CD_CLFC_3068 = B.CD_CLFC_3068  
		  AND A.CD_CLFC_3068 > 0  
		  AND B.TIPO_ESTOQUE <> ''09'' ')  
  
		--CRISTIANO-09/06/2015-INICIO  
		--ATUALIZAR OS CAMPOS ABAIXO PELA CARACTERISTICA ORIGEM  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   A.CUPOM =  
			CASE   
			 WHEN A.ESTOQUE_ORI IN (''01'', ''02'', ''03'') THEN B.RFX_TAXA --RF_INDEXACAO  
			 ELSE A.CUPOM  
			END ,  
  
		   A.RF_EMISSAO2 =  
			CASE  
			 WHEN A.ESTOQUE_ORI in (''01'', ''02'', ''03'') THEN B.RFX_PARTIDA --RF_INDEXACAO  
			 ELSE A.RF_EMISSAO2  
			END ,  
  
		   A.RF_VENCTO2 =  
			CASE  
			 WHEN A.ESTOQUE_ORI in (''01'', ''02'', ''03'') THEN B.RFX_VOLTA --RF_INDEXACAO  
			 ELSE A.RF_VENCTO2  
			END   
		  FROM  
		   #OPERACOES_GERAL  A  
		   JOIN RF_INDEXACAO B (NOLOCK) ON A.CARAC_ORI = B.RF_CARACTERISTICA  
		   AND A.CARAC_ORI <> A.RF_CARACTERISTICA  
		  ')  
		--CRISTIANO-09/06/2015-FIM  
  
		 IF @GERAR_LOG_BATCH = 'S'  
		 BEGIN  
		  IF @VLZ_LOTE = 'N'  
		  BEGIN  

		  if @@spid = 109 select 'rf2500', 1078

		   EXEC('  
			DELETE #OPERACOES_GERAL  
			WHERE ATV_FCVALORIZ =  ''003''  
			AND ESTOQUE_ORI NOT IN (''01'', ''02'', ''03'')  
			AND (IDX_CODIGO IN (''CDI'', ''RESERVA'') OR IDX_PRE = ''S'')  
			AND ATV_PUBLICO = ''N''  
			AND IC_FIDC = ''N''  
		   ')  
     
		  END  
		  ELSE  
		  BEGIN  

		  if @@spid = 109 select 'rf2500', 1093

		   EXEC('  
			DELETE #OPERACOES_GERAL  
			WHERE NOT (  
				(  
				 (ATV_FCVALORIZ =  ''003'' AND ESTOQUE_ORI NOT IN (''01'', ''02'', ''03'')) or  
				 (ATV_FCVALORIZ =  ''008'' AND ESTOQUE_ORI IN (''01'', ''02'', ''03''))  
				)  
				AND (IDX_CODIGO IN (''CDI'', ''RESERVA'') OR IDX_PRE = ''S'')  
				AND ATV_PUBLICO = ''N''  
				AND IC_FIDC = ''N''  
			   )  
		   -- OPERACOES NAO PADRONIZADAS SEM FLUXO DEVEM VALORIZAR PELA LOTE  
		   AND RF_CARACTERISTICA NOT IN (SELECT RF_CARACTERISTICA FROM #OPRC_NAO_PADRONIZADA_SEM_FLUXO)'  
		   )  
		  END  
		 END  
  
		 -- APAGA AS OPERACOES QUE TENHAM ESTOQUE ORIGINAL '09' (SUJEIRA DA LIMPEZA)  
		 EXEC ('  
		  DELETE FROM  
		   #OPERACOES_GERAL  
		  WHERE  
		   ESTOQUE_ORI = ''09''')  
  
		 -- BUSCA A EMPRESA PARA FERIADOS  
		 EXEC ('  
		  UPDATE  
		   #OPERACOES_GERAL  
		  SET  
		   FER_CHAVE = ''''  
		  WHERE  
		   PFPJ_APELIDO_EMPRESA NOT IN (SELECT PFPJ_APELIDO FROM EMPRESA (NOLOCK)) ')  
  
		 -- SE A EMPRESA EH POSICAO  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   FER_CHAVE = ISNULL(D.PFPJ_APELIDO, '''')  
		  FROM  
		   #OPERACOES_GERAL A,  
		   POSICAO   B (NOLOCK),  
		   EMPRESA   C (NOLOCK),   
		   CONTAS   D (NOLOCK)  
		  WHERE  
		   A.FER_CHAVE = ''''  
		  AND A.PFPJ_APELIDO_EMPRESA = B.POS_APELIDO  
		  AND A.PFPJ_CORRENTISTA = D.CTA_CORRENTISTA  
		  AND C.PFPJ_APELIDO = D.PFPJ_APELIDO ')  
  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   FER_CHAVE = ISNULL(B.EMP_ADMINISTR, '''')  
		  FROM  
		   #OPERACOES_GERAL A,  
		   POSICAO   B (NOLOCK)  
		  WHERE  
		   A.FER_CHAVE = ''''  
		  AND A.PFPJ_APELIDO_EMPRESA = B.POS_APELIDO ')  
  
		 -- SE O CUSTODIANTE EH EMPRESA  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   FER_CHAVE = A.PFPJ_CUSTODIANTE  
		  FROM  
		   #OPERACOES_GERAL A,  
		   EMPRESA   B (NOLOCK)  
		  WHERE  
		   A.FER_CHAVE = ''''  
		  AND A.PFPJ_CUSTODIANTE = B.PFPJ_APELIDO ')  
  
		 -- SE O CUSTODIANTE EH POSICAO  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   FER_CHAVE = ISNULL(B.EMP_ADMINISTR, '''')  
		  FROM  
		   #OPERACOES_GERAL A,  
		   POSICAO   B (NOLOCK)  
		  WHERE  
		   A.FER_CHAVE = ''''  
		  AND A.PFPJ_CUSTODIANTE = B.POS_APELIDO ')  
  
		 -- SE O CUSTODIANTE NAO EH POSICAO  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   FER_CHAVE = ISNULL(B.PFPJ_APELIDO_INST, '''')  
		  FROM  
		   #OPERACOES_GERAL A,  
		   CONTAS   B (NOLOCK)  
		  WHERE  
		   A.FER_CHAVE = ''''  
		  AND A.PFPJ_CORRENTISTA = B.CTA_CORRENTISTA ')  
  
		 -- MARCA SE POSICAO EH FUNDO E SE CALCULA MERCADO NO PRIMEIRO DIA  
		 EXEC ('  
		  UPDATE  
		   A  
		  SET  
		   EH_FUNDO = ''S'',  
		   MERCADO_1DIA = ISNULL(B.FDO_MERCADO_1DIA, ''S''),  
		   FDO_MES_BALANCO = ISNULL(B.FDO_MES_BAL, 0)  
		  FROM  
		   #OPERACOES_GERAL A,  
		   FDO_POSICAO_FUNDO B (NOLOCK)  
		  WHERE  
		   A.PFPJ_APELIDO_EMPRESA = B.POS_APELIDO ')  
  
		 -- BUSCA A DATA DA ULTIMA COTA LIBERADA (SOMENTE PARA FUNDOS)  
		 EXEC ('  
		  UPDATE A  
		  SET DT_ULTIMA_COTA_LIBERADA = (SELECT ISNULL(MAX(FPA_DATA), ''1900-01-01'')  
			   FROM FDO_PATRIMONIO (NOLOCK)  
			   WHERE POS_APELIDO = A.PFPJ_APELIDO_EMPRESA  
			   AND FPA_DATA > ''' + @CH_DT_ICAL + '''  
			   AND FPA_REAL = ''S''  
			   AND FPA_STATUS_A_F_L = ''L'')  
		  FROM  
		   #OPERACOES_GERAL A  
		  WHERE  
		   A.EH_FUNDO = ''S'' ')  
  
		 --select @RETORNA_MSG  RETORNA_MSG  
		 --NAO VALORIZAR FUNDOS NA VALORIZACAO BATCH  
		 IF @RETORNA_MSG  = 'S'  
		 BEGIN  
			
			--- THIAGO -> LTN-1000
			if @@spid = 109 select 'rf2500', 1231

			  -- FUNDOS DE ABERTURA (D0)  
			--   SELECT DISTINCT   
			--    A.POS_APELIDO  
			  UPDATE  
			   A  
			  SET  
			   DT_ULTIMA_COTA_LIBERADA = @DT_FNAL  
			  FROM   
			   #OPERACOES_GERAL A,  
			   SANT308_FD_GRUPO   B (NOLOCK),   
			   FDO_POSICAO_FUNDO  C (NOLOCK)  
			  WHERE   
			   A.PFPJ_APELIDO_EMPRESA = B.POS_APELIDO   
			--    B.POS_APELIDO IN (SELECT G.POS_APELIDO   
			--                               FROM GRUPO_POSICAO G,   
			--                                    USUARIO_GRUPO H   
			--                              WHERE G.GRU_CODIGO = H.GRU_CODIGO   
			--                                AND H.USU_CODIGO = @USUARIO)  
			   AND B.IC_SEL_OPRD = 'S'   
			   AND A.PFPJ_APELIDO_EMPRESA = C.POS_APELIDO    
			   AND C.FDO_INT_EXT <> 'E'  
			   AND C.IC_FDO_ATVO = 'S'  
			   AND C.FDA_RETRO_COTA > 0 -- Fundos de abertura  
			--  ORDER BY A.POS_APELIDO  
			  UPDATE  
			   A  
			  SET  
			   DT_ULTIMA_COTA_LIBERADA = @DT_ICAL  
			  FROM   
			   #OPERACOES_GERAL A,  
			   SANT308_FD_GRUPO  B (NOLOCK),   
			   FDO_POSICAO_FUNDO C (NOLOCK)  
			  WHERE   
			   A.PFPJ_APELIDO_EMPRESA = B.POS_APELIDO   
			--    A.POS_APELIDO IN (SELECT G.POS_APELIDO   
			--                              FROM GRUPO_POSICAO G,   
			--                                   USUARIO_GRUPO H   
			--                             WHERE G.GRU_CODIGO = H.GRU_CODIGO   
			--                               AND H.USU_CODIGO = @USUARIO)  
			   AND B.IC_SEL_OPRD = 'S'   
			   AND A.PFPJ_APELIDO_EMPRESA = C.POS_APELIDO    
			   AND C.FDO_INT_EXT <> 'E'  
			   AND C.IC_FDO_ATVO = 'S'  
			   AND C.FDA_RETRO_COTA <= 0 -- Desprezar Fundos de abertura  
			--  ORDER BY A.POS_APELIDO  
		 END  
  
		 -- SEPARA AS OPERACOES QUE NAO SERAO VALORIZADAS EM LOTE (VALORIZA EM LOTE APENAS PRIVADOS, ESTOQUE ORIGEM 00, INDEXADOR CDI OU PRE E FORMA DE CALCULO 003)  
		-- SELECT '#OPRC_NAO_LOTE'  
		-- SELECT * FROM #OPRC_NAO_LOTE  
		--   
		-- SELECT '#OPERACOES_GERAL'  
		-- SELECT * FROM #OPERACOES_GERAL  
		--   
		-- SELECT '#OPRC_LOTE'  
		-- SELECT * FROM #OPRC_LOTE  
		--SELECT 'BICUDO 2.2'  

		--- THIAGO -> LTN-1000
		if @@spid = 109 select 'rf2500', 1292

		 INSERT INTO #OPRC_NAO_LOTE  
		  (  
			  RF_CARACTERISTICA,  
			  ESTOQUE_ORI,  
			  ATV_FCVALORIZ,  
			  EH_FUNDO,  
			  DT_ULTIMA_COTA_LIBERADA,  
			  TEM_MOVTO_RETROATIVO  
		  )  
		 EXEC ('  
		  SELECT  
		   RF_CARACTERISTICA,  
		   ESTOQUE_ORI,  
		   ATV_FCVALORIZ,  
		   EH_FUNDO,  
		   DT_ULTIMA_COTA_LIBERADA,  
		   TEM_MOVTO_RETROATIVO  
		  FROM  
		   #OPERACOES_GERAL  
		  WHERE  
		  NOT (  
			ATV_FCVALORIZ  =  ''003''  
		   AND ESTOQUE_ORI = ''00''  
		   AND (IDX_CODIGO IN (''CDI'', ''RESERVA'') OR IDX_PRE = ''S'')  
		   AND ATV_PUBLICO = ''N''  
		   AND IC_FIDC = ''N''  
		 )   
		  --DESPREZAR DA NAO COMPROMISSADAS COM DEBENTURES DA SAFRALEASE  
		  AND NOT (  
		   (ESTOQUE_ORI IN (''01'', ''02'', ''03'') and ATV_FCVALORIZ  =  ''008'' AND PFPJ_APELIDO_EMPRESA NOT IN (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO)) --WEVESAN(INCLUIR ESSA LINHA)  
  
		   )  
		 ')  
  
		 -- INSERIR OPERACOES COM PU MANUAL  
		 INSERT INTO #OPRC_NAO_LOTE  
		  (  
		  RF_CARACTERISTICA,  
		  ESTOQUE_ORI,  
		  ATV_FCVALORIZ,  
		  EH_FUNDO,  
		  DT_ULTIMA_COTA_LIBERADA,  
		  TEM_MOVTO_RETROATIVO  
		  )  
		 EXEC ('  
		  SELECT  
		   A.RF_CARACTERISTICA,  
		   ESTOQUE_ORI,  
		   ATV_FCVALORIZ,  
		   EH_FUNDO,  
		   DT_ULTIMA_COTA_LIBERADA,  
		   TEM_MOVTO_RETROATIVO  
		  FROM  
		   #OPERACOES_GERAL A,  
		   RF_INDEXACAO  B  
		  WHERE  
		   A.RF_CARACTERISTICA = B.Rf_CARACTERISTICA AND   
		   B.RFX_RESULTADO = ''006'' AND  
		   A.RF_CARACTERISTICA NOT IN (SELECT RF_CARACTERISTICA FROM #OPRC_NAO_LOTE)  
     
		   --DESPREZAR DA NAO COMPROMISSADAS COM DEBENTURES DA SAFRALEASE  
		--   AND NOT (ESTOQUE_ORI IN (''01'', ''02'', ''03'') and ATV_FCVALORIZ  =  ''008'') --WEVESAN(INCLUIR ESSA LINHA)  
		   AND NOT (ESTOQUE_ORI IN (''01'', ''02'', ''03'') and ATV_FCVALORIZ  =  ''008'' AND PFPJ_APELIDO_EMPRESA NOT IN (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO)) --WEVESAN(INCLUIR ESSA LINHA)  
  
		 ')  

		 if @@spid = 109 select 'rf2500', 1371
		 if @@spid = 109 select * FROM #OPRC_NAO_LOTE

			-- --------------------------------------------------------------------------------  
			-- DESVIA PROCESSAMENTO PARA A VALORIZACAO EM "LOTE" PARA AS OPERACOES NAO_PADRONIZADAS TIVEREM:  
			-- -> APENAS 1-UM FLUXO NA AGENDA (NO VENCIMENTO)  
			-- -> APENAS UMA REPACTUAÇÃO  
			-- -> NEGOCIADOS NO PRIMARIO  
			-- --------------------------------------------------------------------------------  
			BEGIN  
			 INSERT INTO   #OPRC_NAO_PADRONIZADA_SEM_FLUXO  
					SELECT DISTINCT  
						RDF.RF_CARACTERISTICA  
			--        INTO   #OPRC_NAO_PADRONIZADA_SEM_FLUXO  
					FROM   #OPRC_NAO_LOTE               ONL  
					JOIN   RENDA_FIXA                   RDF  
					  ON   RDF.RF_CARACTERISTICA        = ONL.RF_CARACTERISTICA  
					JOIN   RF_INDEXACAO                 RFI  
					  ON   RFI.RF_CARACTERISTICA        = RDF.RF_CARACTERISTICA  
					JOIN   RF_TITULO                    RFT  
					  ON   RFT.TITULO_ID                = RDF.TITULO_ID  
					JOIN   SANT643_RF_REPAC_TITULO      T643  
					  ON   T643.TITULO_ID               = RFT.TITULO_ID  
					JOIN   SANT644_RF_AGENDA_EVENTO     T644  
					  ON   T644.TITULO_ID               = T643.TITULO_ID  
					  AND  T644.ID_RPAC                 = T643.ID_RPAC  
					WHERE  RDF.ATV_CODIGO               IN (SELECT ATV_CODIGO FROM RF_MERCADORIA WHERE IC_OPRC_NAO_PADR = 'S')  
			--          AND  RDF.IDX_CODIGO               = 'CDI'  
					  AND  RDF.TIPO_ESTOQUE             = '00'  
			-- ??? tipo de estoque 09 precisa ?? verificar  
			--           AND  RDF.TIPO_ESTOQUE_ORIGINAL    = '00'           
			 AND RDF.RF_CARACTERISTICA NOT IN (SELECT RF_CARACTERISTICA FROM #OPRC_NAO_PADRONIZADA_SEM_FLUXO)  
			 AND RDF.ATV_CODIGO NOT IN ('CRA', 'CRI', 'DEBENTURES', 'DEBENTURES INCT', 'CPR F', 'NP', 'COTAS DE FUNDOS')  
			 AND RDF.PFPJ_APELIDO_EMPRESA NOT IN (SELECT POS_APELIDO FROM FDO_POSICAO_FUNDO)  
			 AND RDF.IDX_CODIGO      IN ('CDI', 'PRE')  
			   AND  RFI.RFX_PARTIDA      <= RFT.TIT_EMISSAO  
				 AND RDF.RF_AGENTE IN (SELECT PFPJ_APELIDO FROM EMPRESA)  
					GROUP BY   
					  RDF.RF_CARACTERISTICA  
					HAVING ( ( MAX(T644.ID_RPAC) = MIN(T644.ID_RPAC) )     -- apenas os que não possuem repactuação  
							 AND   
							 ( MAX(T644.DT_EVE) = MIN(T644.DT_EVE) )       -- apenas os que tem um único evento (vencimento)  
						   )  

				DELETE ONL  
				FROM   #OPRC_NAO_LOTE ONL  
				JOIN   #OPRC_NAO_PADRONIZADA_SEM_FLUXO AUX  
				  ON   AUX.RF_CARACTERISTICA = ONL.RF_CARACTERISTICA  
			END  
  
		 EXEC ('  
		  DELETE A  
		  FROM  
		   #OPERACOES_GERAL A  
		  JOIN #OPRC_NAO_LOTE B  
		  ON A.RF_CARACTERISTICA = B.RF_CARACTERISTICA  
		 ')  
  
		 if @@spid = 109 select 'rf2500', 1429
		 if @@spid = 109 select * FROM #OPRC_NAO_PADRONIZADA_SEM_FLUXO

		IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		BEGIN  
		-- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		RETURN  
		END  
  
		IF @GERAR_LOG_BATCH = 'S'  
		BEGIN  
			-- PEGA QUANTIDADE DE REGISTROS  
			SELECT @QTD_REG = COUNT(*)  
			FROM  
			#OPRC_NAO_LOTE  
  
			if @@spid = 109 select 'rf2500', 1427

			IF @QTD_REG > 0  
			BEGIN  
	
				if @@spid = 109 select 'rf2500', 1432

				INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				VALUES (@DT_PROCESSO, 'QTD_REG', @SPID, GETDATE(), CONVERT(VARCHAR(10), @QTD_REG))  
			END  
		END  
  
		IF @SELECT_OU_EXEC = 'S'
			BEGIN   

				if @@spid = 109 select 'rf2500', 1442

				DELETE FROM RF_RELATORIOS
				WHERE RFR_CONTROLE = @VCH_RFR_CONTROLE 
  
				INSERT INTO RF_RELATORIOS 
				(	RFR_CONTROLE
				,	RF_CARACTERISTICA
				,	RFR_STR_10
				,	RFR_DATA
				,	RFR_STR_11)
				SELECT  
					@VCH_RFR_CONTROLE,
					RF_CARACTERISTICA,  
					EH_FUNDO,  
					DT_ULTIMA_COTA_LIBERADA,  
					TEM_MOVTO_RETROATIVO  
					FROM  
					#OPRC_NAO_LOTE  
					WHERE  
					(ATV_FCVALORIZ <> '003' AND (ESTOQUE_ORI = '00'or estoque_ori = '08'))
		   
				RETURN 
			END 
  
		 -- INICIO DA VALORIZACAO EM LOTE  
		 IF @GERAR_LOG_BATCH = 'N' OR (@GERAR_LOG_BATCH = 'S' AND @VLZ_LOTE = 'S')  
		 BEGIN  
  
			--- THIAGO -> LTN-1000
			if @@spid = 109 select 'rf2500', 1471

		  IF @GERAR_LOG_BATCH = 'S'  
		  BEGIN  

			if @@spid = 109 select 'rf2500', 1472

		   -- PEGA QUANTIDADE DE REGISTROS  
		   DELETE #OPERACOES  
		   INSERT INTO #OPERACOES (RF_CARACTERISTICA)  
		   EXEC('  
			SELECT RF_CARACTERISTICA FROM #OPERACOES_GERAL  
		   ')  
  
		   SELECT @QTD_REG = COUNT(*)  
		   FROM  
			#OPERACOES  
  
		   IF @QTD_REG > 0  
		   BEGIN  
			INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
			VALUES (@DT_PROCESSO, 'QTD_REG', @SPID, GETDATE(), CONVERT(VARCHAR(10), @QTD_REG))  
		   END  
		  END  
  
		 --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1497
		  EXEC SANPP_RF_VALORIZACAO_PRIVADOS_PRE @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO, @CONSIDERAR_RETROATIVAS  

		 if @@spid = 109 select 'rf2500', 1497, 'SANPP_RF_VALORIZACAO_PRIVADOS_PRE', @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO, @CONSIDERAR_RETROATIVAS
		 --if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
		  IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		  BEGIN  
		   -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		   RETURN  
		  END  
  
		  -- CALCULOS PRIVADOS CDI E RESERVA  
         --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1510
		  EXEC SANPP_RF_VALORIZACAO_PRIVADOS_CDI @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO, @CONSIDERAR_RETROATIVAS  

		if @@spid = 109 select 'rf2500', 1510, 'SANPP_RF_VALORIZACAO_PRIVADOS_CDI', @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO, @CONSIDERAR_RETROATIVAS
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
		  -- LOG   
		  IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
		  BEGIN  
		   INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
		   VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Fim: SANPP_RF_VALORIZACAO_PRIVADOS_CDI - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
		  END  
  
		  -- INDICE PARA ACELERAR OS CRUZAMENTOS  
		  CREATE INDEX IDX_CARAC_DATA ON #OPRC_LOTE (RF_CARACTERISTICA, RFS_DATA)  
  
		  IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		  BEGIN  
		   -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		   RETURN  
		  END  
  
		  -- CALCULO DAS OUTRAS COLUNAS DA RF_SALDOS E INSERCAO NA BASE  
		  --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1531
		  EXEC SANPP_RF_VALORIZACAO_CALCULOS_SALDOS @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO  

		  if @@spid = 109 select 'rf2500', 1531, 'SANPP_RF_VALORIZACAO_CALCULOS_SALDOS', @DT_ICAL, @DT_FNAL, @GERAR_LOG_BATCH, @DT_PROCESSO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
		  -- LOG   
		  IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
		  BEGIN  
		   INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
		   VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Fim: SANPP_RF_VALORIZACAO_CALCULOS_SALDOS - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
		  END  
  
		  IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		  BEGIN  
		   -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		   RETURN  
		  END  
  
  
		  -- ESTOQUE GERENCIAL  
		 --- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1550
		   EXEC SANPP_RF_VALORIZACAO_LOTE_ESTQ_GER @GERAR_LOG_BATCH, @DT_PROCESSO 

		if @@spid = 109 select 'rf2500', 1550, 'SANPP_RF_VALORIZACAO_LOTE_ESTQ_GER', @GERAR_LOG_BATCH, @DT_PROCESSO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
		  -- LOG   
		  IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
		  BEGIN  
		   INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
		   VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Fim: SANPP_RF_VALORIZACAO_LOTE_ESTQ_GER - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
		  END  
  
		  IF @GERAR_LOG_BATCH = 'S' AND EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
		  BEGIN  
		   -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
		   RETURN  
		  END  
  
  
		  IF @GERAR_LOG_BATCH = 'S'  
		  BEGIN  
		   INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO  
		   (  
			DT_B,  
			SGL_T_RG,  
			SPID,   
			DT_H_ATC,  
			TXT_DESC_EVE  
		   )  
		   SELECT DISTINCT  
			@DT_PROCESSO,  
			'CARAC',  
			@SPID,   
			GETDATE(),  
			RF_CARACTERISTICA  
		   FROM #OPRC_LOTE  
		  END  
  
		  IF @GERAR_LOG_BATCH = 'S' AND @VLZ_LOTE = 'S'  
		  BEGIN  
		   INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
		   VALUES (@DT_PROCESSO, 'MSG', @SPID, GETDATE(), 'Operacoes em LOTE terminadas! - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
		  END  
  
		 END  
		 -- TERMINO DA VALORIZACAO EM LOTE  
  
		 -- DEFINE RETORNO DEFAULT  
		 SELECT @RETORNO = 0  
  
		 -- INICIO DAS OPERACOES NAO VALORIZADAS EM LOTE  
  
		  -- VARIAVEL TABLE, PARA MELHOR DESEMPENHO  
		  --DECLARE #TB_OPERACOES_NAO_LOTE TABLE  
		  CREATE TABLE #TB_OPERACOES_NAO_LOTE  
		  (  
		  RF_CARACTERISTICA CHAR(20),  
		  EH_FUNDO  CHAR(01),  
		  DT_ULTIMA_COTA_LIBERADA DATETIME,  
		  TEM_MOVTO_RETROATIVO CHAR(01)  
		  )  
        
		  --NAO PADRONIZADAS E TITULOS PUBLICOS  
		  DELETE #TB_OPERACOES_NAO_LOTE  
  
		  INSERT INTO #TB_OPERACOES_NAO_LOTE  
		  SELECT  
		   RF_CARACTERISTICA,  
		   EH_FUNDO,  
		   DT_ULTIMA_COTA_LIBERADA,  
		   TEM_MOVTO_RETROATIVO  
		  FROM  
		   #OPRC_NAO_LOTE  
		  WHERE  
		   (ATV_FCVALORIZ <> '003'  
			   AND (ESTOQUE_ORI = '00'or estoque_ori = '08'))  
    
		  CREATE CLUSTERED INDEX IDX_OPERACOES_NAO_LOTE ON #TB_OPERACOES_NAO_LOTE (RF_CARACTERISTICA)  
  
		  SELECT  
		   @CARAC = '',  
		   @QTD_PROC = 0  
  
		  --WHILE EXISTS (SELECT RF_CARACTERISTICA FROM #TB_OPERACOES_NAO_LOTE WHERE RF_CARACTERISTICA > @CARAC)  
		  WHILE 1=1  
		  BEGIN  
		   SELECT @MENSAGEM_ERRO = ''  
  
		   SELECT @DT_VAL_INICIO = @DT_ICAL  
  
		   SELECT TOP 1   
			@CARAC = RF_cARACTERISTICA,  
			@EH_FUNDO = EH_FUNDO,  
			@TEM_MOVTO_RETROATIVO = ISNULL(TEM_MOVTO_RETROATIVO,'N'),  
			@DT_ULT_COTA_LIBERADA = DT_ULTIMA_COTA_LIBERADA  
		   FROM  #TB_OPERACOES_NAO_LOTE  
		   --WHERE RF_cARACTERISTICA = @CARAC  
  
		   IF @@ROWCOUNT = 0  
			BREAK  
      
		   -- TRATAMENTO PARA OPERACOES RETROATIVAS  
		   IF @CONSIDERAR_RETROATIVAS = 'S' AND @TEM_MOVTO_RETROATIVO = 'S'  
			SELECT @DT_VAL_INICIO = @DT_RESERVA_ANTERIOR  
  
		   IF @EH_FUNDO  = 'S' AND @DT_ULT_COTA_LIBERADA >= @DT_VAL_INICIO  
			SELECT @DT_VAL_INICIO = DATEADD(DAY, 1, @DT_ULT_COTA_LIBERADA)  
  
		   IF @DT_VAL_INICIO <= @DT_FNAL  
		   BEGIN  
  
		  -- LOG   
			IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
			BEGIN  
			 INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
			 VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Característica:' + convert(char(50),isnull(@carac,0)) + ' Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)) )  
			END  
  
			-- RF0888.PRC  
				SELECT @MENSAGEM_ERRO = ''  
		 if @@spid = 109 select 'rf2500', 1669
			EXEC @RETORNO = SANPP_RF_VALORIZACAO @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1669,'SANPP_RF_VALORIZACAO', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
				SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
  
			/***************************************************/  
			/* RDF - VALORIZACAO DE ESTOQUE GERENCIAL (RF1725) */  
			/***************************************************/  
				SELECT @MENSAGEM_ERRO = ''  
		 if @@spid = 109 select 'rf2500', 1688
			EXEC SANPP_RF_VALZ_ESTQ_GERENCIAL @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1688, 'SANPP_RF_VALZ_ESTQ_GERENCIAL', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
					SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
           
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
		   END  
  
		   IF @GERAR_LOG_BATCH = 'S' AND RTRIM(@MENSAGEM_ERRO) = ''   
		   BEGIN  
			INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
			VALUES (@DT_PROCESSO, 'CARAC', @SPID, GETDATE(), @CARAC)  
		   END  
  
		   -- INCREMENTA CONTADOR DE REGISTROS PROCESSADOS  
		   SELECT @QTD_PROC = @QTD_PROC + 1  
  
		   -- A CADA 100 REGISTROS PROCESSADOS, VERIFICA SE O PROCESSO FOI CANCELADO OU NAO (SOMENTE NA VALORIZACAO BATCH)  
		   IF @QTD_PROC >= 100 AND @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
			-- ZERA CONTADOR  
			SELECT @QTD_PROC = 0  
  
			IF EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
			BEGIN  
			 -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
			 RETURN  
			END  
		   END  
  
		   DELETE #TB_OPERACOES_NAO_LOTE WHERE RF_CARACTERISTICA = @CARAC  
		  END  
  
		  --COMPROMISSADAS OU PRIVADOS  
		  DELETE #TB_OPERACOES_NAO_LOTE  
  
		  INSERT INTO #TB_OPERACOES_NAO_LOTE  
		  SELECT  
		   RF_CARACTERISTICA,  
		   EH_FUNDO,  
		   DT_ULTIMA_COTA_LIBERADA,  
		   TEM_MOVTO_RETROATIVO  
		  FROM  
		   #OPRC_NAO_LOTE  
		  WHERE  
		   ESTOQUE_ORI IN ('01', '02', '03')  
		  OR ( ATV_FCVALORIZ = '003'  
		   AND ESTOQUE_ORI IN ('00','08')  
		   )     
  
		  SELECT  
		   @CARAC = '',  
		   @QTD_PROC = 0  
  
		  --WHILE EXISTS (SELECT TOP 1 RF_CARACTERISTICA FROM #TB_OPERACOES_NAO_LOTE  WHERE RF_CARACTERISTICA > @CARAC)  
		  WHILE 1=1  
		  BEGIN  
  
		   --- THIAGO -> LTN-1000
		   if @@spid = 109 select 'rf2500', 1755
		   SELECT @DT_VAL_INICIO = @DT_ICAL  
  
		   SELECT TOP 1  
			@CARAC = RF_cARACTERISTICA,  
			@EH_FUNDO = EH_FUNDO,  
			@TEM_MOVTO_RETROATIVO = ISNULL(TEM_MOVTO_RETROATIVO,'N'),  
			@DT_ULT_COTA_LIBERADA = DT_ULTIMA_COTA_LIBERADA  
		   FROM  #TB_OPERACOES_NAO_LOTE  
  
		   IF @@ROWCOUNT = 0  
			  BREAK  
  
  
		   -- CONTROLE DE FUNDOS  
  
		   -- TRATAMENTO PARA OPERACOES RETROATIVAS  
		   IF @CONSIDERAR_RETROATIVAS = 'S' AND @TEM_MOVTO_RETROATIVO = 'S'  
			SELECT @DT_VAL_INICIO = @DT_RESERVA_ANTERIOR  
  
		   -- VERIFICA A COTA DOS FUNDOS  
		   IF @EH_FUNDO  = 'S' AND @DT_ULT_COTA_LIBERADA >= @DT_VAL_INICIO  
			SELECT @DT_VAL_INICIO = DATEADD(DAY, 1, @DT_ULT_COTA_LIBERADA)  
  
		   IF @DT_VAL_INICIO <= @DT_FNAL  
		   BEGIN  
  
			-- LOG   
			IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
			BEGIN  
			 INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
			 VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Característica:' + convert(char(50),isnull(@carac,0)) + ' Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)) )  
			END  
  
			-- GBVLFI03.PRC  
				SELECT @MENSAGEM_ERRO = ''  
		--- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1794
			EXEC @RETORNO = SIAN_RF_VAL_FIS_003 @CARAC, @DT_VAL_INICIO, @DT_FNAL, NULL, 'N', @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1794, 'SIAN_RF_VAL_FIS_003', @CARAC, @DT_VAL_INICIO, @DT_FNAL, NULL, 'N', @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
					SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
  
			/***************************************************/  
			/* RDF - VALORIZACAO DE ESTOQUE GERENCIAL (RF1725) */  
			/***************************************************/  
				SELECT @MENSAGEM_ERRO = ''  
		--- THIAGO -> LTN-1000
		 if @@spid = 109 select 'rf2500', 1813
			EXEC SANPP_RF_VALZ_ESTQ_GERENCIAL @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1813, 'SANPP_RF_VALZ_ESTQ_GERENCIAL', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
					SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
		   END  
  
		   IF @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
			INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
			VALUES (@DT_PROCESSO, 'CARAC', @SPID, GETDATE(), @CARAC)  
		   END  
  
		   -- INCREMENTA CONTADOR DE REGISTROS PROCESSADOS  
		   SELECT @QTD_PROC = @QTD_PROC + 1  
  
		   -- A CADA 100 REGISTROS PROCESSADOS, VERIFICA SE O PROCESSO FOI CANCELADO OU NAO (SOMENTE NA VALORIZACAO BATCH)  
		   IF @QTD_PROC >= 100 AND @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
			-- ZERA CONTADOR  
			SELECT @QTD_PROC = 0  
  
			IF EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
			BEGIN  
			 -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
			 RETURN  
			END  
		   END  
  
		   DELETE  #TB_OPERACOES_NAO_LOTE WHERE RF_CARACTERISTICA = @CARAC  
		  END  
  
		  --ESTOQUES VINCULADOS  
		  DELETE #TB_OPERACOES_NAO_LOTE  
  
		  INSERT INTO #TB_OPERACOES_NAO_LOTE  
		  SELECT  
		   RF_CARACTERISTICA,  
		   EH_FUNDO,  
		   DT_ULTIMA_COTA_LIBERADA,  
		   TEM_MOVTO_RETROATIVO  
		  FROM  
		   #OPRC_NAO_LOTE  
		  WHERE  
		   ESTOQUE_ORI IN ('04', '05')  
  
		  SELECT  
		   @CARAC = '',  
		   @QTD_PROC = 0  
  
		  --WHILE EXISTS (SELECT TOP 1 RF_CARACTERISTICA FROM #TB_OPERACOES_NAO_LOTE  WHERE RF_CARACTERISTICA > @CARAC)  
		  WHILE 1=1  
		  BEGIN  
  
		   SELECT @DT_VAL_INICIO = @DT_ICAL  
  
		   SELECT TOP 1  
			@CARAC = RF_cARACTERISTICA,  
			@EH_FUNDO = EH_FUNDO,  
			@TEM_MOVTO_RETROATIVO = ISNULL(TEM_MOVTO_RETROATIVO,'N'),  
			@DT_ULT_COTA_LIBERADA = DT_ULTIMA_COTA_LIBERADA  
		   FROM  #TB_OPERACOES_NAO_LOTE  
  
		   IF @@ROWCOUNT = 0  
			  BREAK  
  
		   -- TRATAMENTO PARA OPERACOES RETROATIVAS  
		   IF @CONSIDERAR_RETROATIVAS = 'S' AND @TEM_MOVTO_RETROATIVO = 'S'  
			SELECT @DT_VAL_INICIO = @DT_RESERVA_ANTERIOR  
  
		   -- VERIFICA A COTA DOS FUNDOS  
		   IF @EH_FUNDO  = 'S' AND @DT_ULT_COTA_LIBERADA >= @DT_VAL_INICIO  
			SELECT @DT_VAL_INICIO = DATEADD(DAY, 1, @DT_ULT_COTA_LIBERADA)  
  
		   IF @DT_VAL_INICIO <= @DT_FNAL  
		   BEGIN  
  
			-- LOG   
			IF @USU_CODIGO <> '' and @GERAR_LOG_BATCH = 'S'  
			BEGIN  
			 INSERT INTO HISTORICOS_VALORIZACAO (USU_DATA_HORA,USU_CODIGO,STRU_MODULO,SIS_CODIGO,DESC_OPER)  
			 VALUES ( GETDATE(),@USU_CODIGO,'RFVEXE','RFV','Característica:' + convert(char(50),isnull(@carac,0)) + ' Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)) )  
			END  
  
			-- GBVLFI05.PRC  
				SELECT @MENSAGEM_ERRO = ''  
		 if @@spid = 109 select 'rf2500', 1908
			EXEC @RETORNO = SIAN_RF_VAL_FIS_005 @CARAC, @DT_VAL_INICIO, @DT_FNAL, NULL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1908, 'SIAN_RF_VAL_FIS_005', @CARAC, @DT_VAL_INICIO, @DT_FNAL, NULL, @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
					SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
  
			/***************************************************/  
			/* RDF - VALORIZACAO DE ESTOQUE GERENCIAL (RF1725) */  
			/***************************************************/  
				SELECT @MENSAGEM_ERRO = ''  
		 if @@spid = 109 select 'rf2500', 1927
			EXEC SANPP_RF_VALZ_ESTQ_GERENCIAL @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO OUTPUT  

		if @@spid = 109 select 'rf2500', 1927, 'SANPP_RF_VALZ_ESTQ_GERENCIAL', @CARAC, @DT_VAL_INICIO, @DT_FNAL, @RETORNA_MSG, @MENSAGEM_ERRO
		-- if @@spid = 109 
		select top 3 rfs_pu_uteis, rfs_pu_corridos, * from rf_saldos (nolock) where rf_caracteristica = '00000000000023021639' order by rfs_data desc
  
				IF @GERAR_LOG_BATCH = 'S' AND @MENSAGEM_ERRO <> ''  
				BEGIN  
					SELECT @VDT_GETDATE_ERRO = GETDATE()  
					WHILE LEN(RTRIM(@MENSAGEM_ERRO)) > 0  
					BEGIN  
				 INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
				 VALUES (@DT_PROCESSO, 'ERRO PROC', @SPID, @VDT_GETDATE_ERRO, LEFT(@MENSAGEM_ERRO, 90))  
					  SELECT @MENSAGEM_ERRO = RTRIM(SUBSTRING(@MENSAGEM_ERRO, 91, 500))  
					END  
				END  
		   END  
  
		   IF @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
			INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
			VALUES (@DT_PROCESSO, 'CARAC', @SPID, GETDATE(), @CARAC)  
		   END  
  
		   -- INCREMENTA CONTADOR DE REGISTROS PROCESSADOS  
		   SELECT @QTD_PROC = @QTD_PROC + 1  
  
		   -- A CADA 100 REGISTROS PROCESSADOS, VERIFICA SE O PROCESSO FOI CANCELADO OU NAO (SOMENTE NA VALORIZACAO BATCH)  
		   IF @QTD_PROC >= 100 AND @GERAR_LOG_BATCH = 'S'  
		   BEGIN  
			-- ZERA CONTADOR  
			SELECT @QTD_PROC = 0  
  
			IF EXISTS(SELECT SGL_T_RG FROM SANT1984_RF_CONTROLE_VALORIZACAO WITH(NOLOCK) WHERE DT_B = @DT_PROCESSO AND SGL_T_RG = 'CANCELAR' AND SPID = @SPID)  
			BEGIN  
			 -- PROCESSO CANCELADO NA VALORIZACAO BATCH  
			 RETURN  
			END  
		   END  
  
		   DELETE  #TB_OPERACOES_NAO_LOTE WHERE RF_cARACTERISTICA = @CARAC  
  
		  END  
  
		 -- TERMINO DAS OPERACOES NAO VALORIZADAS EM LOTE  
		END
	--***********************************************************************************************************************
	--FLC FIM

	IF @GERAR_LOG_BATCH = 'S'  
	BEGIN  
	INSERT INTO SANT1984_RF_CONTROLE_VALORIZACAO (DT_B, SGL_T_RG, SPID, DT_H_ATC, TXT_DESC_EVE)  
	VALUES (@DT_PROCESSO, 'MSG', @SPID, GETDATE(), 'Processo de ' + @TIPO_PROCESSO + ' Concluído - Conexão:' + convert(char(50),isnull(@ID_CONEXAO,0)))  
	END  
  
	IF @GERAR_LOG_BATCH = 'N'  
	RETURN @RETORNO  
  
END  